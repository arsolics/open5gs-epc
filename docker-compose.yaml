version: '3'
services:
  docker_open5gs:
    build: ./base 
    image: docker_open5gs
    networks:
      default:
        ipv4_address: ${OPEN5GS_IP}
  docker_kamailio:
    build: ./ims_base
    image: docker_kamailio
    networks:
      default:
        ipv4_address: ${KAMAILIO_IP}
  mongo:
    restart: unless-stopped
    hostname: "mongo"
    build: ./mongo
    image: docker_open5gs_mongo
    container_name: mongo
    env_file:
      - .env
    volumes:
      - ./mongo:/mnt/mongo
      - mongodbdata:/var/lib/mongodb
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "27017/udp"
      - "27017/tcp"
    networks:
      default:
        ipv4_address: ${MONGO_IP}
  webui:
    restart: unless-stopped
    hostname: "webui"
    build: ./webui
    image: docker_open5gs_webui
    container_name: webui
    depends_on:
      - docker_open5gs
      - mongo
    env_file:
      - .env
    volumes:
      - ./webui:/mnt/webui
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "3000/tcp"
        #ports:
        #  - "3000:3000/tcp"
    networks:
      default:
        ipv4_address: ${WEBUI_IP}
  nrf:
    depends_on:
      - docker_open5gs
    restart: unless-stopped
    hostname: "nrf"
    build: ./nrf
    image: docker_open5gs_nrf
    container_name: nrf
    env_file:
      - .env
    volumes:
      - ./nrf:/mnt/nrf
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${NRF_IP}
  ausf:
    restart: unless-stopped
    hostname: "ausf"
    build: ./ausf
    image: docker_open5gs_ausf
    depends_on:
      - nrf
    container_name: ausf
    env_file:
      - .env
    volumes:
      - ./ausf:/mnt/ausf
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${AUSF_IP}
  udr:
    restart: unless-stopped
    hostname: "udr"
    build: ./udr
    image: docker_open5gs_udr
    depends_on:
      - nrf
      - mongo
    container_name: udr
    env_file:
      - .env
    volumes:
      - ./udr:/mnt/udr
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${UDR_IP}
  udm:
    restart: unless-stopped
    hostname: "udm"
    build: ./udm
    image: docker_open5gs_udm
    depends_on:
      - nrf
    container_name: udm
    env_file:
      - .env
    volumes:
      - ./udm:/mnt/udm
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${UDM_IP}
  pcf:
    restart: unless-stopped
    hostname: "pcf"
    build: ./pcf
    image: docker_open5gs_pcf
    depends_on:
      - nrf
      - mongo
    container_name: pcf
    env_file:
      - .env
    volumes:
      - ./pcf:/mnt/pcf
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${PCF_IP}
  hss:
    restart: unless-stopped
    hostname: "hss"
    build: ./hss
    image: docker_open5gs_hss
    container_name: hss
    env_file:
      - .env
    volumes:
      - ./hss:/mnt/hss
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    depends_on:
      - docker_open5gs
      - mongo
    expose:
      - "3868/udp"
      - "3868/tcp"
      - "3868/sctp"
      - "5868/udp"
      - "5868/tcp"
      - "5868/sctp"
    networks:
      default:
        ipv4_address: ${HSS_IP}
  sgwc:
    restart: unless-stopped
    hostname: "sgwc"
    build: ./sgwc
    image: docker_open5gs_sgwc
    depends_on:
      - nrf
      - smf
      - upf
    container_name: sgwc
    env_file:
      - .env
    volumes:
      - ./sgwc:/mnt/sgwc
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "2123/udp"
      - "8805/udp"
    networks:
      default:
        ipv4_address: ${SGWC_IP}
  sgwu:
    restart: unless-stopped
    hostname: "sgwu"
    build: ./sgwu
    image: docker_open5gs_sgwu
    depends_on:
      - nrf
      - smf
      - upf
    container_name: sgwu
    env_file:
      - .env
    volumes:
      - ./sgwu:/mnt/sgwu
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "8805/udp"
      - "2152/udp"
    # ports:
    #   - "2152:2152/udp"
    networks:
      default:
        ipv4_address: ${SGWU_IP}
  smf:
    restart: unless-stopped
    hostname: "smf"
    build: ./smf
    image: docker_open5gs_smf
    depends_on:
      - nrf
    container_name: smf
    env_file:
      - .env
    volumes:
      - ./smf:/mnt/smf
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "3868/udp"
      - "3868/tcp"
      - "3868/sctp"
      - "5868/udp"
      - "5868/tcp"
      - "5868/sctp"
      - "8805/udp"
      - "2123/udp"
      - "7777/tcp"
    networks:
      default:
        ipv4_address: ${SMF_IP}
  upf:
    restart: unless-stopped
    hostname: "upf"
    build: ./upf
    image: docker_open5gs_upf
    depends_on:
      - nrf
      - smf
    container_name: upf
    env_file:
      - .env
    volumes:
      - ./upf:/mnt/upf
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "2152/udp"
      - "8805/udp"
    # ports:
    #   - "2152:2152/udp"
    cap_add:
      - NET_ADMIN
    devices:
      - "/dev/net/tun"
    sysctls:
      - net.ipv4.ip_forward=1
      #- net.ipv6.conf.all.disable_ipv6=0
    networks:
      default:
        ipv4_address: ${UPF_IP}
  amf:
    restart: unless-stopped
    hostname: "amf"
    build: ./amf
    image: docker_open5gs_amf
    depends_on:
      - smf
      - upf
      - nrf
      - ausf
      - udm
      - udr
      - pcf
    container_name: amf
    env_file:
      - .env
    volumes:
      - ./amf:/mnt/amf
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "38412/sctp"
      - "7777/tcp"
    # ports:
    #   - "38412:38412/sctp"
    networks:
      default:
        ipv4_address: ${AMF_IP}
  mme:
    restart: unless-stopped
    hostname: "mme"
    build: ./mme
    image: docker_open5gs_mme
    depends_on:
      - hss
      - sgwc
      - sgwu
      - smf
      - upf
    container_name: mme
    env_file:
      - .env
    volumes:
      - ./mme:/mnt/mme
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "3868/udp"
      - "3868/tcp"
      - "3868/sctp"
      - "5868/udp"
      - "5868/tcp"
      - "5868/sctp"
      - "36412/sctp"
      - "2123/udp"
    # ports:
    #   - "36412:36412/sctp"
    networks:
      default:
        ipv4_address: ${MME_IP}
  pcrf:
    restart: unless-stopped
    hostname: "pcrf"
    build: ./pcrf
    image: docker_open5gs_pcrf
    container_name: pcrf
    env_file:
      - .env
    depends_on:
      - mongo
      - docker_open5gs
    volumes:
      - ./pcrf:/mnt/pcrf
      - ./log:/open5gs/install/var/log/open5gs
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "3868/udp"
      - "3868/tcp"
      - "3868/sctp"
      - "5868/udp"
      - "5868/tcp"
      - "5868/sctp"
    networks:
      default:
        ipv4_address: ${PCRF_IP}
  dns:
    restart: unless-stopped
    hostname: "dns"
    build: ./dns
    image: docker_dns
    container_name: dns
    env_file:
      - .env
    volumes:
      - ./dns:/mnt/dns
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "53/udp"
    networks:
      default:
        ipv4_address: ${DNS_IP}
  rtpengine:
    restart: unless-stopped
    hostname: "rtpengine"
    build: ./rtpengine
    image: docker_rtpengine
    container_name: rtpengine
    privileged: true
    env_file:
      - .env
    volumes:
      - ./rtpengine:/mnt/rtpengine
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    cap_add:
      - NET_ADMIN
    environment:
      - TABLE=0
      - INTERFACE=${RTPENGINE_IP}
      - LISTEN_NG=${RTPENGINE_IP}:2223
      - PIDFILE=/run/ngcp-rtpengine-daemon.pid
      - PORT_MAX=50000
      - PORT_MIN=49000
      - NO_FALLBACK=no
      - TOS=184
    expose:
      - "2223/udp"
      - "49000-50000/udp"
    # ports:
    #   - "49000-50000:49000-50000/udp"
    networks:
      default:
        ipv4_address: ${RTPENGINE_IP}
  mysql:
    restart: unless-stopped
    hostname: "mysql"
    build: ./mysql
    image: docker_mysql
    container_name: mysql
    env_file:
      - .env
    volumes:
      - dbdata:/var/lib/mysql
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    expose:
      - "3306/tcp"
    networks:
      default:
        ipv4_address: ${MYSQL_IP}
  fhoss:
    restart: unless-stopped
    hostname: "fhoss"
    build: ./fhoss
    image: docker_fhoss
    container_name: fhoss
    dns: ${DNS_IP}
    volumes:
      - ./fhoss:/mnt/fhoss
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - dns
      - mysql
    expose:
      - "3868/udp"
      - "3868/tcp"
        #ports:
        #- "8080:8080/tcp"
    networks:
      default:
        ipv4_address: ${FHOSS_IP}
  icscf:
    restart: unless-stopped
    hostname: "icscf"
    build: ./icscf
    image: docker_icscf
    container_name: icscf
    dns: ${DNS_IP}
    volumes:
      - ./icscf:/mnt/icscf
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - docker_kamailio
      - dns
      - mysql
      - fhoss
    expose:
      - "3869/udp"
      - "3869/tcp"
      - "4060/udp"
      - "4060/tcp"
    networks:
      default:
        ipv4_address: ${ICSCF_IP}
  scscf:
    restart: unless-stopped
    hostname: "scscf"
    build: ./scscf
    image: docker_scscf
    container_name: scscf
    dns: ${DNS_IP}
    volumes:
      - ./scscf:/mnt/scscf
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - docker_kamailio
      - dns
      - mysql
      - fhoss
    expose:
      - "3870/udp"
      - "3870/tcp"
      - "6060/udp"
      - "6060/tcp"
    networks:
      default:
        ipv4_address: ${SCSCF_IP}
  pcscf:
    restart: unless-stopped
    hostname: "pcscf"
    build: ./pcscf
    image: docker_pcscf
    container_name: pcscf
    dns: ${DNS_IP}
    privileged: true
    cap_add:
      - NET_ADMIN
    volumes:
      - ./pcscf:/mnt/pcscf
        #- /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - docker_kamailio
      - dns
      - mysql
      - rtpengine
      - icscf
      - scscf
    expose:
      - "3871/udp"
      - "3871/tcp"
      - "5060/tcp"
      - "5060/udp"
      - "5100-5120/tcp"
      - "5100-5120/udp"
      - "6100-6100/tcp"
      - "6100-6120/udp"
    # ports:
    #   - "3871:3871/udp"
    #   - "3871:3871/tcp"
    #   - "5060:5060/tcp"
    #   - "5060:5060/udp"
    #   - "5100-5120:5100-5120/tcp"
    #   - "5100-5120:5100-5120/udp"
    #   - "6100-6100:6100-6100/tcp"
    #   - "6100-6120:6100-6100/udp"
    networks:
      default:
        ipv4_address: ${PCSCF_IP}
  openvpn-as:
    build: 
      context: ./openvpn/docker-openvpn/
    hostname: "openvpn"
    image: openvpn-as
    container_name: openvpn-as
    env_file:
      - .env
    cap_add:
      - NET_ADMIN
    environment:
      - TZ=Europe/London
    volumes:
      - ovpndata:/etc/openvpn
    ports:
            #- 943:943
            #- 9443:9443
      - 1194:1194/udp
      - 5544:22/tcp
    restart: unless-stopped
    networks:
      default:
        ipv4_address: ${OVPN_IP}

networks:
  default:
    ipam:
      config:
        - subnet: ${TEST_NETWORK}
volumes:
  mongodbdata: {}
  dbdata: {}
  ovpndata: {}
